name: Terraform Setup and Destroy

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Select environment"
        required: true
        type: choice
        options:
          - staging
          - prod
      action:
        description: "Action to perform"
        required: true
        type: choice
        options:
          - apply
          - destroy

jobs:
  terraform:
    name: Terraform Setup or Destroy
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set Up Terraform
        run: |
          sudo apt-get update -y
          sudo apt-get install -y terraform

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Terraform Init for Setup
        run: |
          cd infra/setup
          terraform init

      - name: Terraform Apply/Destroy for Setup
        env:
          TF_WORKSPACE: ${{ github.event.inputs.environment }}
        run: |
          cd infra/setup
          terraform workspace select $TF_WORKSPACE || terraform workspace new $TF_WORKSPACE
          if [ "${{ github.event.inputs.action }}" == "apply" ]; then
            terraform apply -auto-approve
          else
            terraform destroy -auto-approve
          fi

      - name: Terraform Init for Deploy
        run: |
          cd infra/deploy
          terraform init

      - name: Terraform Apply/Destroy for Deploy
        env:
          TF_WORKSPACE: ${{ github.event.inputs.environment }}
        run: |
          cd infra/deploy
          terraform workspace select $TF_WORKSPACE || terraform workspace new $TF_WORKSPACE
          if [ "${{ github.event.inputs.action }}" == "apply" ]; then
            terraform apply -auto-approve
          else
            terraform destroy -auto-approve
          fi

      - name: Cleanup Workspace (if destroyed)
        if: ${{ github.event.inputs.action == 'destroy' }}
        run: |
          cd infra/deploy
          terraform workspace select default
          terraform workspace delete $TF_WORKSPACE || true
